# -*- coding: utf-8 -*-

import telebot
from telebot import types
import time
import os
import json

TOKEN = os.environ.get("BOT_TOKEN") or "7628596509:AAH-GgXWnMJlUUs9mMPr9PRiy-gRr6h3AYY"
bot = telebot.TeleBot(TOKEN)

# ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–π
GROUP_ID = "@Clovis_94"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π id –≥—Ä—É–ø–ø—ã

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–π
reservations_file = "reservations.json"

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ—à–∞–≥–æ–≤–æ–π —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
temp_users = {}

def load_reservations():
    try:
        with open(reservations_file, "r", encoding="utf-8") as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_reservations(data):
    with open(reservations_file, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã"))
    markup.add(types.KeyboardButton("üì∑ –ì–∞–ª–µ—Ä–µ—è Toza Markoviƒá"))
    markup.add(types.KeyboardButton("üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç"))
    markup.add(types.KeyboardButton("üéâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏"))
    markup.add(types.KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"))
    markup.add(types.KeyboardButton("üìù –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞"))
    markup.add(types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–π"))
    return markup

@bot.message_handler(commands=["start", "menu"])
def start(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! üëã\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ:",
        reply_markup=main_menu()
    )

@bot.message_handler(func=lambda m: True)
def menu_handler(message):
    if message.text == "üìÑ –°–∫–∞—á–∞—Ç—å –ø—Ä–∞–π—Å-–ª–∏—Å—Ç—ã":
        bot.send_message(message.chat.id, "üì© –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∞–π—Å-–ª–∏—Å—Ç–æ–≤‚Ä¶ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.", reply_markup=main_menu())
        files = ["–ü—Ä–∞–π—Å_–æ–±—â–µ—Å—Ç—Ä–æ–π.xlsx", "–ü—Ä–∞–π—Å_–∫—Ä–æ–≤–µ–ª—å–Ω—ã–π.xls"]
        for filename in files:
            try:
                with open(filename, "rb") as f:
                    bot.send_document(message.chat.id, f)
            except FileNotFoundError:
                bot.send_message(message.chat.id, f"‚ùå –§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ —Ä—è–¥–æ–º —Å bot.py", reply_markup=main_menu())
        bot.send_message(message.chat.id, "–ü—Ä–∞–π—Å-–ª–∏—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ‚úÖ", reply_markup=main_menu())

    elif message.text == "üì∑ –ì–∞–ª–µ—Ä–µ—è Toza Markoviƒá":
        bot.send_message(message.chat.id, "üì∑ –ì–∞–ª–µ—Ä–µ—è Toza Markoviƒá –∑–¥–µ—Å—å:\nhttps://toza.rs/prodavnica/crep/", reply_markup=main_menu())

    elif message.text == "üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç":
        bot.send_message(message.chat.id, "üåê –ú–æ–π —Å–∞–π—Ç:\nhttps://mirkeramiki.org", reply_markup=main_menu())

    elif message.text == "üéâ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏":
        try:
            with open("promo.jpg", "rb") as photo:
                bot.send_photo(message.chat.id, photo, reply_markup=main_menu())
        except FileNotFoundError:
            bot.send_message(message.chat.id, "‚ùå –ö–∞—Ä—Ç–∏–Ω–∫–∞ promo.jpg –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", reply_markup=main_menu())

    elif message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
        contacts_text = (
            "üìç *–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:*\n\n"
            "üè¢ *–û—Ñ–∏—Å*\n"
            "üìû +380503909383 (–û–ª–µ–≥ –ë–∞—Ä–∞–Ω–æ–≤ - –æ–±—â–µ—Å—Ç—Ä–æ–π)\n"
            "üìû +380979560464 (–ï–≤–≥–µ–Ω–∏–π –†–æ–≥–∞—á–∫–æ - –∫—Ä–æ–≤–ª—è)\n"
            "üìç [–≥. –û–¥–µ—Å—Å–∞, —É–ª. –õ–µ–≤–∏—Ç–∞–Ω–∞ 62](https://maps.app.goo.gl/R4ULrDniGVGfqpjm6)\n\n"
            "üè¢ *–°–∫–ª–∞–¥ ‚Ññ1*\n"
            "üìû +380950411490 (–∫–ª–∞–¥–æ–≤—â–∏–∫ –ê–Ω–¥—Ä–µ–π)\n"
            "üìç [–≥. –û–¥–µ—Å—Å–∞, –ö–∏–µ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ 2](https://maps.app.goo.gl/RkA5sAu6pZ7nbjHe6)\n\n"
            "üè¢ *–°–∫–ª–∞–¥ ‚Ññ2*\n"
            "üìû +380505190818 (–∫–ª–∞–¥–æ–≤—â–∏–∫ –í–∞–¥–∏–º)\n"
            "üìç [—Å. –ù–µ—Ä—É–±–∞–π—Å–∫–æ–µ, –ü–∞—Å—Ç–µ—Ä–∞ 1](https://maps.app.goo.gl/SHzNKh9Kyid4SzdR8)"
        )
        bot.send_message(
            message.chat.id,
            contacts_text,
            parse_mode="Markdown",
            disable_web_page_preview=True,
            reply_markup=main_menu()
        )

    elif message.text == "üìù –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞":
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞:")
        bot.register_next_step_handler(msg, process_address)

    elif message.text == "üìã –°–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–π":
        reservations = load_reservations()
        if not reservations:
            bot.send_message(message.chat.id, "üì≠ –ü–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏.", reply_markup=main_menu())
            return

        text = "üìã –¢–µ–∫—É—â–∏–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏:\n\n"
        for address, data in reservations.items():
            text += f"üè† –ê–¥—Ä–µ—Å: {address}\n"
            text += f"üì¶ –û–±—ä—ë–º: {data['volume']}\n"
            text += f"üìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\n"
            text += "----------------------\n"

        bot.send_message(message.chat.id, text, reply_markup=main_menu())

    else:
        bot.send_message(message.chat.id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.", reply_markup=main_menu())

# ====== –§—É–Ω–∫—Ü–∏–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º temp_users ======

def process_address(message):
    address = message.text.strip()
    reservations = load_reservations()
    if address in reservations:
        bot.send_message(message.chat.id, "‚ùå –≠—Ç–æ—Ç –æ–±—ä–µ–∫—Ç —É–∂–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω!")
        return
    user_id = message.from_user.id
    temp_users[user_id] = {"address": address}
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –æ–±—ä—ë–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:")
    bot.register_next_step_handler(msg, process_volume)

def process_volume(message):
    user_id = message.from_user.id
    if user_id not in temp_users:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return
    temp_users[user_id]["volume"] = message.text.strip()
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞–∫–∞–∑—á–∏–∫–∞:")
    bot.register_next_step_handler(msg, process_contact)

def process_contact(message):
    user_id = message.from_user.id
    if user_id not in temp_users:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–Ω–æ–≤–æ.")
        return

    contact = message.text.strip()
    if len(contact) != 4 or not contact.isdigit():
        msg = bot.send_message(message.chat.id, "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ **–ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ü–∏—Ñ—Ä—ã** –Ω–æ–º–µ—Ä–∞:")
        bot.register_next_step_handler(msg, process_contact)
        return

    user_data = temp_users.pop(user_id)
    user_data["contact"] = contact

    reservations = load_reservations()
    reservations[user_data["address"]] = {
        "user_id": user_id,
        "volume": user_data["volume"],
        "contact": user_data["contact"]
    }
    save_reservations(reservations)

    text = f"üìå –ù–æ–≤–∞—è —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è:\n–ê–¥—Ä–µ—Å: {user_data['address']}\n–û–±—ä—ë–º: {user_data['volume']}\n–ö–æ–Ω—Ç–∞–∫—Ç: {user_data['contact']}"
    bot.send_message(GROUP_ID, text)
    bot.send_message(message.chat.id, "‚úÖ –í–∞—à –æ–±—ä–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω!", reply_markup=main_menu())

# ====== –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –∫—Ä–∞—à–µ–π ======

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")

if __name__ == "__main__":
    while True:
        try:
            print("üöÄ Polling —Å—Ç–∞—Ä—Ç—É–µ—Ç...")
            bot.infinity_polling(timeout=60, long_polling_timeout=90)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è polling: {e}")
            print("‚è± –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º polling...")
            time.sleep(5)
